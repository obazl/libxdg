load("@bazel_skylib//lib:paths.bzl", "paths")
load("@makeheaders//src:RULES.bzl", "makeheaders")
load("@obazl_tools_cc//config/cc:CONFIG.bzl",
     "BASE_COPTS",
     "BASE_LINKOPTS",
     "BASE_LOCAL_DEFINES")

load("@obazl_tools_cc//macros:local_includes.bzl",
     "local_includes")

load("BUILD.bzl", xlocal_includes = "local_includes")

VERSION = "'-D{}_VERSION=\"{}\"'".format(module_name().upper(), module_version())


cc_library(
    name  = "xdgc",
    srcs  = ["libxdgc.c", "mkhdrs"],
    hdrs  = ["xdgc.h"],
    deps  = ["@liblogc//src:logc",
             "@uthash//src:uthash",
             ],
    includes = ["$(@liblogc)/src"],
    copts = BASE_COPTS + [
        # "-x", "c",
        # "-O3",
        # "-Wno-unused-function",
        "-I$(@uthash)/src",
        "-I$(@liblogc)/src",
        # "-I$(location @liblogc//src:logc)/..",
        VERSION,
        "-I$(GENDIR)/$(@)/lib",
        # "-I\"$(`basename $(location :mkhdrs))`\"",
        # "-I\\`dirname\\ {}\\`".format("$(location :mkhdrs)"),
        # "-I$(location :mkhdrs)"
        # "-I$(GENDIR)/lib"
    ],
    # ] + xlocal_includes("."),
    # + local_includes("liblogc/src2"),
    # + select({
    #     "@platforms//os:linux": ["-std=gnu11"],
    #     "//conditions:default": ["-std=c11"],
    # }),
    # local_defines = BASE_LOCAL_DEFINES,
    toolchains = ["//:module_profiles"],
    visibility = ["//visibility:public"]
)

############
makeheaders(
    name             = "mkhdrs",
    hdrs_srcs        = ["libxdgc.c"],
)

makeheaders(
    name             = "export_hdr",
    out              = "xdgc.h",
    export_interface = True,
    hdrs_srcs        = ["libxdgc.c"],
    visibility       = ["//visibility:public"]
)

